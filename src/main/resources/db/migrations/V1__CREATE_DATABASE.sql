IF NOT EXISTS (SELECT name FROM sys.databases WHERE name = N'EduWise')
BEGIN
    CREATE DATABASE EduWise;
END
GO
USE EduWise;
GO

CREATE TABLE USERS_ACCOUNT(
    ID INT IDENTITY(1,1) PRIMARY KEY,
    NAME NVARCHAR(100) NOT NULL,
    EMAIL NVARCHAR(150) UNIQUE NOT NULL,
    PASSWORD_HASH NVARCHAR(255) NOT NULL,
    ROLE NVARCHAR(15) NOT NULL,
    CREATED_AT DATETIME2 DEFAULT SYSDATETIME(),
    UPDATED_AT DATETIME2,
    CONSTRAINT ck_user_role CHECK (ROLE IN ('STUDENT','TEACHER','ADMIN'))
);

CREATE TABLE COURSE_CATEGORIES(
    ID INT IDENTITY(1,1) PRIMARY KEY,
    TITLE NVARCHAR(150) NOT NULL,
    CREATED_AT DATETIME2 DEFAULT SYSDATETIME(),
    UPDATED_AT DATETIME2
);

CREATE TABLE COURSES(
    ID INT IDENTITY(1,1) PRIMARY KEY,
    TEACHER_ID INT,
    CATEGORY_ID INT,
    TITLE NVARCHAR(100) NOT NULL,
    DESCRIPTION NVARCHAR(MAX),
    CREATED_AT DATETIME2 DEFAULT SYSDATETIME(),
    UPDATED_AT DATETIME2,
    CONSTRAINT FK_Courses_UserTeacher FOREIGN KEY (TEACHER_ID) REFERENCES USERS_ACCOUNT(ID),
    CONSTRAINT FK_Courses_CourseCategory FOREIGN KEY (CATEGORY_ID) REFERENCES COURSE_CATEGORIES(ID)
);

CREATE TABLE MODULES(
    ID INT IDENTITY(1,1) PRIMARY KEY,
    TITLE NVARCHAR(100) NOT NULL,
    CREATED_AT DATETIME2 DEFAULT SYSDATETIME(),
    UPDATED_AT DATETIME2,
    COURSE_ID INT,
    CONSTRAINT FK_Modules_Course FOREIGN KEY (COURSE_ID) REFERENCES COURSES(ID)
);

CREATE TABLE LESSONS(
    ID INT IDENTITY(1,1) PRIMARY KEY,
    TITLE NVARCHAR(100) NOT NULL,
    CONTENT_TYPE NVARCHAR(20) NOT NULL,
    VIDEO_URL NVARCHAR(255),
    TEXT_CONTENT NVARCHAR(MAX),
    MODULE_ID INT,
    CREATED_AT DATETIME2 DEFAULT SYSDATETIME(),
    UPDATED_AT DATETIME2,
    CONSTRAINT FK_Lesson_Module FOREIGN KEY (MODULE_ID) REFERENCES MODULES(ID),
    CONSTRAINT FK_Lesson_Content_Type CHECK (CONTENT_TYPE IN ('VIDEO','TEXT'))
);

CREATE TABLE STUDENT_ENROLLMENTS(
    ID INT IDENTITY(1,1) PRIMARY KEY,
    USER_ID INT,
    COURSE_ID INT,
    CREATED_AT DATETIME2 DEFAULT SYSDATETIME(),
    UPDATED_AT DATETIME2,
    CONSTRAINT FK_Enrollments_User FOREIGN KEY (USER_ID) REFERENCES USERS_ACCOUNT(ID),
    CONSTRAINT FK_Enrollments_Course FOREIGN KEY (COURSE_ID) REFERENCES COURSES(ID),
    UNIQUE (USER_ID, COURSE_ID)
);
